package akun;

import data.Portofolio;
import data.Saham;
import data.SuratBerhargaNegara;
import data.Transaksi;
import data.Transaksi.JenisTransaksi;
import data.PortofolioView;
import fitur.SahamFitur;
import fitur.SBNFitur;

import java.util.ArrayList;
import java.util.List;

public class Customer extends User {
    private Portofolio portofolio;
    private PortofolioView portofolioView;
    private List<Transaksi> riwayatTransaksi;

    public Customer(String username, String password) {
        super(username, password);
        this.portofolio = new Portofolio();
        this.portofolioView = new PortofolioView();
        this.riwayatTransaksi = new ArrayList<>();
    }

    public void beliSaham(SahamFitur sahamFitur, String kode, int jumlahLembar) {
        Saham saham = sahamFitur.getSaham(kode);

        if (saham == null) {
            System.out.println("Saham dengan kode " + kode + " tidak ditemukan.");
            return;
        }

        double harga = saham.getHarga();
        double totalNilai = harga * jumlahLembar;

        portofolio.tambahSaham(kode, jumlahLembar, harga);

        Transaksi transaksi = new Transaksi(JenisTransaksi.BELI_SAHAM, kode, jumlahLembar, harga);
        riwayatTransaksi.add(transaksi);

        System.out.println("Berhasil membeli " + jumlahLembar + " lembar saham " +
                kode + " dengan total nilai Rp " + String.format("%,.0f", totalNilai));
    }

    public void jualSaham(SahamFitur sahamFitur, String kode, int jumlahLembar) {
        Saham saham = sahamFitur.getSaham(kode);

        if (saham == null) {
            System.out.println("Saham dengan kode " + kode + " tidak ditemukan.");
            return;
        }

        int jumlahDimiliki = portofolio.getJumlahSaham(kode);

        if (jumlahDimiliki < jumlahLembar) {
            System.out.println("Gagal menjual saham. Anda hanya memiliki " +
                    jumlahDimiliki + " lembar saham " + kode + ".");
            return;
        }

        double harga = saham.getHarga();
        double totalNilai = harga * jumlahLembar;

        portofolio.jualSaham(kode, jumlahLembar);

        Transaksi transaksi = new Transaksi(JenisTransaksi.JUAL_SAHAM, kode, jumlahLembar, harga);
        riwayatTransaksi.add(transaksi);

        System.out.println("Berhasil menjual " + jumlahLembar + " lembar saham " +
                kode + " dengan total nilai Rp " + String.format("%,.0f", totalNilai));
    }

    public void beliSBN(SBNFitur sbnFitur, String nama, double nominal) {
        SuratBerhargaNegara sbn = sbnFitur.getSBN(nama);

        if (sbn == null) {
            System.out.println("SBN dengan nama " + nama + " tidak ditemukan.");
            return;
        }

        if (nominal <= 0) {
            System.out.println("Nominal pembelian harus lebih dari 0.");
            return;
        }

        boolean berhasil = sbn.tambahPembelian(nominal);

        if (berhasil) {
            portofolio.tambahSBN(nama, nominal);

            Transaksi transaksi = new Transaksi(nama, nominal);
            riwayatTransaksi.add(transaksi);

            System.out.println("Berhasil membeli SBN " + nama + " dengan nominal Rp " +
                    String.format("%,.0f", nominal));
        }
    }

    public void tampilkanSahamDimiliki(SahamFitur sahamFitur) {
        portofolioView.tampilkanDaftarSahamSederhana(portofolio, sahamFitur);
    }

    public void tampilkanPortofolio(SahamFitur sahamFitur) {
        portofolioView.tampilkanPortofolio(portofolio, sahamFitur, SBNFitur.getDaftarSBN());
    }

    public void tampilkanRingkasanPortofolio(SahamFitur sahamFitur) {
        portofolioView.tampilkanRingkasanPortofolio(portofolio, sahamFitur, SBNFitur.getDaftarSBN());
    }

    public Portofolio getPortofolio() {
        return portofolio;
    }

    public List<Transaksi> getRiwayatTransaksi() {
        return riwayatTransaksi;
    }
}
